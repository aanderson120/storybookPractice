{
  "compilerOptions": {
    "moduleResolution": "bundler",
    "target": "ESNext",
    "module": "ESNext",
    /**
     * svelte-preprocess cannot figure out whether you have
     * a value or a type, so tell TypeScript to enforce using
     * `import type` instead of `import` for Types.
     */
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "resolveJsonModule": true,
    /**
     * To have warnings / errors of the Svelte compiler at the
     * correct position, enable source maps by default.
     */
    "sourceMap": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable this if you'd like to use dynamic types.
     */
    "checkJs": true
  },
  /**
   * Use global.d.ts instead of compilerOptions.types
   * to avoid limiting type declarations.
   */
  "include": ["src/**/*.d.ts", "src/**/*.js", "src/**/*.svelte", "src/stories/stories/Completed/AspireButton.stories.ts", "src/stories/stories/Completed/AspireCheckbox.stories.ts", "src/stories/stories/Completed/AspireDatePicker.stories.ts", "src/stories/stories/AspireConfirmationModal.storsrc/stories/stories/Completed/AspireCollapsibleSection.stories.tsstories.ts", "src/stories/stories/Completed/AspireTableHistory.stories.ts", "src/stories/stories/AspireResidentDetails.storsrc/stories/stories/Completed/AspireRadioSelect.storsrc/stories/stories/Completed/AspireHeader.stories.tsireHsrc/stories/stories/Completed/AspireEventSelect.stories.tsentSelect.stories.ts", "src/stories/stories/Completed/AspireEmailInput.stories.ts", "src/stories/stories/Completed/AspireDateTimePicker.stories.ts", "src/stories/stories/AspireTosrc/stories/stories/Completed/AspireTextInput.stories.tsTextInput.storsrc/stories/stories/Completed/AspireTextArea.stories.tsstories.ts", "src/stories/stories/AspireMetricHistory.stories.ts", "src/stories/stories/VitalInput.stories.ts"]
}
